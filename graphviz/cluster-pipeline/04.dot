/*
    This file is part of tau-vulnerability.
    Copyright (C) 2019-2020  Emir Turkes

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

    Emir Turkes can be contacted at emir.turkes@eturkes.com
*/

digraph {
    rankdir=LR;
    node [shape=box, fontname=Verdana, fontsize=12];
    edge [fontname=Verdana, fontsize=12];
    splines=ortho;

    uses_umis [shape=ellipse, label="Uses UMIs?"];
    uses_umisA [shape=point, style=invis, width=0];
    uses_umisB [shape=point, style=invis, width=0];
    sctrans [label=<SCTransform<BR/><FONT POINT-SIZE="10">(with confounders regressed-out)</FONT>>];
    pca [label="PCA"];
    pcaA [shape=point, style=invis, width=0];
    contains_symbols [shape=ellipse, label="Contains gene symbols?"];
    contains_symbolsA [shape=point, style=invis, width=0];
    convert_ensembl [label="Convert to ENSEMBL IDs"];
    convert_ensemblA [shape=circle, width=0.1, label=""];
    zinb [label=<ZINB-WaVE<BR/><FONT POINT-SIZE="10">(with confounders + GC content/gene length regressed-out)</FONT>>];
    zinbA [shape=circle, width=0.1, label=""];

    {
        rank=same;
        edge [dir=none];
        uses_umisA -> uses_umis;
        uses_umis -> uses_umisB;
    }
    {
        rank=same;
        contains_symbolsA -> contains_symbols [dir=none];
        contains_symbols -> sctrans [style=invis];
    }
    {
        rank=same;
        convert_ensembl -> convert_ensemblA;
    }
    {
        rank=same;
        zinb -> zinbA [xlabel=<<FONT POINT-SIZE="10">Retain first 10 dimensions  </FONT>>];
    }

    uses_umisB -> sctrans [xlabel="Yes"];
    sctrans -> pca;
    uses_umisA -> contains_symbols [xlabel="No"];
    contains_symbols -> convert_ensemblA [xlabel="No", dir=none];
    contains_symbolsA -> convert_ensembl [xlabel="Yes"];
    convert_ensemblA -> zinb;
    pca -> pcaA [xlabel=<<FONT POINT-SIZE="5"><BR/></FONT><FONT POINT-SIZE="10">Retain first 30 dimensions</FONT>>, dir=none];
    pcaA -> zinbA;
}
