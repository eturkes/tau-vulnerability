/*
    This file is part of tau-vulnerability.
    Copyright (C) 2019-2020  Emir Turkes

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

    Emir Turkes can be contacted at emir.turkes@eturkes.com
*/

digraph {
    rankdir=LR;
    node [shape=box];
    splines=ortho;

    preproc [label="Pre-processing"];
    preprocA [shape=point, style=invis, width=0];
    preprocB [shape=point, style=invis, width=0];
    gene_counts [label="Gene counts"];
    metadata [label="Metadata"];
    is_single_nuc [shape=ellipse, label="Is single-nucleus?"];
    is_single_nucA [shape=point, style=invis, width=0];
    is_single_nucB [shape=point, style=invis, width=0];
    inc_introns [label="Include introns"];
    inc_intronsA [shape=circle, width=0.1, label=""];

    sce [label="SingleCellExperiment (SCE) object"];
    sceA [shape=point, style=invis, width=0];
    sceB [shape=point, style=invis, width=0];
    sceC [shape=point, style=invis, width=0];
    sceD [shape=point, style=invis, width=0];

    is_case_control [shape=ellipse, label="Is case/control?"];
    is_case_controlA [shape=point, style=invis, width=0];
    is_case_controlB [shape=point, style=invis, width=0];
    is_case_controlC [shape=point, style=invis, width=0];

    {
        rank=same;

        preprocA -> preproc [dir=none];
        preproc -> preprocB [dir=none];
        preprocB -> is_case_controlA [style=invis];
 
        is_case_controlA -> is_case_controlB [style=invis];
        is_case_controlB -> is_case_controlC [style=invis];
        is_case_controlC -> is_case_control;
    }
    {
        rank=same;
        edge [dir=none];
        is_single_nucA -> is_single_nuc;
        is_single_nuc -> is_single_nucB;
    }
    {
        rank=same;
        inc_introns -> inc_intronsA;
    }
    {
        rank=same;
        sce -> sceA [dir=back];
        sceA -> sceB [style=invis];
        sceB -> sceC [style=invis];
        sceC -> sceD [style=invis];
    }

    preprocA -> gene_counts [weight=100];
    gene_counts-> is_single_nuc [weight=100];
    is_single_nucB -> inc_intronsA [xlabel="No", dir=none, weight=100];
    inc_intronsA -> sce[weight=100];
    is_single_nucA -> inc_introns [xlabel="Yes", weight=100];
    preprocB -> metadata [weight=100];
    metadata -> sceA [dir=none];

    sce -> sceD [dir=none];
    sceD -> is_case_controlC [dir=none];
}
